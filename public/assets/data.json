[
  {
    "id": "1",
    "question": {
      "it": "Cos'è lo stato di un componente in React?",
      "en": "What is the state of a component in React?"
    },

    "tags": [
      {
        "tag": "react",
        "color": "blue"
      }
    ],
    "answer": {
      "it": "Lo state di un componente è un oggetto particolare nel quale gestiamo lo stato. Lo stato di un componente è definito dal valore delle proprietà dell'oggetto state. Di conseguenza ReactJS in ogni componente va ad ascoltare i cambiamenti di stato per stimolare la chiamata al metodo render.",
      "en": "The state of a component is a special object in which we manage the state. The state of a component is defined by the value of the properties of the state object. Therefore ReactJS in each component listens to state changes to stimulate the call to the render method."
    }
  },
  {
    "id": "2",
    "question": {
      "it": "Cosa sono la props in React?",
      "en": "What are the props in React?"
    },
    "tags": [
      {
        "tag": "react",
        "color": "blue"
      }
    ],
    "answer": {
      "it": "Le props sono un oggetto che viene passato da un componente padre a un componente figlio. Le props sono immutabili, non possono essere modificate. Le props sono utili per passare dati da un componente padre a un componente figlio.",
      "en": "Props are an object that is passed from a parent component to a child component. Props are immutable, they cannot be modified. Props are useful for passing data from a parent component to a child component."
    }
  },
  {
    "id": "3",
    "question": {
      "it": "Quali sono le differenze tra State e Props in React?",
      "en": "What are the differences between State and Props in React?"
    },
    "tags": [
      {
        "tag": "react",
        "color": "blue"
      }
    ],
    "answer": {
      "it": "Le props sono un oggetto che viene passato da un componente padre a un componente figlio. Le props sono immutabili, non possono essere modificate. Le props sono utili per passare dati da un componente padre a un componente figlio. Lo state di un componente è un oggetto particolare nel quale gestiamo lo stato. Lo stato di un componente è definito dal valore delle proprietà dell'oggetto state. Di conseguenza ReactJS in ogni componente va ad ascoltare i cambiamenti di stato per stimolare la chiamata al metodo render.",
      "en": "Props are an object that is passed from a parent component to a child component. Props are immutable, they cannot be modified. Props are useful for passing data from a parent component to a child component. The state of a component is a special object in which we manage the state. The state of a component is defined by the value of the properties of the state object. Therefore ReactJS in each component listens to state changes to stimulate the call to the render method."
    }
  },
  {
    "id": "4",
    "question": {
      "it": "Come si può aggiornare lo stato di un componente in React?",
      "en": "How can you update the state of a component in React?"
    },
    "tags": [
      {
        "tag": "react",
        "color": "blue"
      }
    ],
    "answer": {
      "it": "Per aggiornare lo stato di un componente in React si può utilizzare il metodo setState().",
      "en": "To update the state of a component in React you can use the setState() method."
    }
  },
  {
    "id": "5",
    "question": {
      "it": "Cos'è il virtual DOM in React?",
      "en": "What is virtual DOM in React?"
    },
    "tags": [
      {
        "tag": "react",
        "color": "blue"
      }
    ],
    "answer": {
      "it": "Il virtual DOM è un oggetto JavaScript che viene utilizzato per rappresentare il DOM reale. Il virtual DOM viene utilizzato per migliorare le prestazioni. Il virtual DOM viene utilizzato per stimolare la chiamata al metodo render() quando si verifica un cambiamento di stato. Il virtual DOM non è altro che una strategia che React utilizza per ottimizzare le prestazioni di un'applicazione. Fornisce un meccanismo che confronta due alberi di renderizzazione per sapere cosa è cambiato esattamente e aggiorna solo ciò che è necessario sul DOM reale. Come React, Vue e alcuni altri framework utilizzano anche questa strategia.",
      "en": "The virtual DOM is a JavaScript object that is used to represent the real DOM. The virtual DOM is used to improve performance. The virtual DOM is used to stimulate the call to the render() method when a state change occurs.Virtual DOM is nothing but a strategy that React uses to optimize the performance of an application. It provides a mechanism that compares two render trees to know what exactly has changed and only updates what is necessary on the actual DOM. Like React, Vue and some other frameworks also employ this strategy."
    }
  },
  {
    "id": "6",
    "question": {
      "it": "Cosa sono i componenti di classe in React?",
      "en": "What are class components in React?"
    },
    "tags": [
      {
        "tag": "react",
        "color": "blue"
      }
    ],
    "answer": {
      "it": "I componenti di classe sono componenti che estendono la classe React.Component. I componenti di classe hanno un metodo render() che restituisce un elemento JSX. I componenti di classe possono anche avere un metodo di stato. I componenti di classe possono anche avere un ciclo di vita.",
      "en": "Class components are components that extend the React.Component class. Class components have a render() method that returns a JSX element. Class components can also have a state method. Class components can also have a life cycle."
    }
  },
  {
    "id": "7",
    "question": {
      "it": "Cosa sono i componenti funzionali in React?",
      "en": "What are functional components in React?"
    },
    "tags": [
      {
        "tag": "react",
        "color": "blue"
      }
    ],
    "answer": {
      "en": "A React functional component is a simple JavaScript function that accepts props and returns a React element. After the introduction of React Hooks, writing functional components has become the ​standard way of writing React components in modern applications.",
      "it": "Un componente funzionale React è una semplice funzione JavaScript che accetta props e restituisce un elemento React. Dopo l'introduzione di React Hooks, la scrittura di componenti funzionali è diventata la modalità standard di scrittura di componenti React nelle applicazioni moderne."
    }
  },

  {
    "id": "8",
    "question": {
      "it": "Parla di Functional Programming Paradigm",
      "en": "Talk about Functional Programming Paradigm"
    },
    "tags": [
      {
        "tag": "js",
        "color": "yellow"
      }
    ],
    "answer": {
      "it": "Funzioni pure con immutabilità e strong typing per ottenere software orientato al risultato",
      "en": "Pure functions with immutability and strong typing to get result-oriented software"
    }
  },
  {
    "id": "9",
    "question": {
      "it": "Cos'è una funzione pura?",
      "en": "What is a pure function?"
    },
    "tags": [
      {
        "tag": "js",
        "color": "yellow"
      }
    ],
    "answer": {
      "it": "Una funzione pura è una funzione che non ha effetti collaterali e non modifica i dati in ingresso. Una funzione pura restituisce sempre lo stesso risultato dato lo stesso input.",
      "en": "A pure function is a function that has no side effects and does not modify the input data. A pure function always returns the same result given the same input."
    }
  },
  {
    "id": "10",
    "question": {
      "it": "Cos'è un componente puro in React?",
      "en": "What is a pure component in React?"
    },
    "tags": [
      {
        "tag": "react",
        "color": "blue"
      }
    ],
    "answer": {
      "en": "A React component is considered pure if it renders the same output for the same state and props. For this type of class component, React provides the PureComponent base class. Class components that extend the React. PureComponent class are treated as pure components.",
      "it": "Un componente React è considerato puro se renderizza lo stesso output per lo stesso stato e props. Per questo tipo di componente di classe, React fornisce la classe base PureComponent. I componenti di classe che estendono la classe React. PureComponent vengono trattati come componenti puri."
    }
  },
  {
    "id": "11",
    "question": {
      "it": "Parlami del Currying",
      "en": "Talk about Currying"
    },
    "tags": [
      {
        "tag": "js",
        "color": "yellow"
      }
    ],
    "answer": {
      "en": "Currying is a technique of evaluating functions with multiple arguments, into a sequence of functions with a single argument. It is also known as partial application of a function to its arguments. Currying is a transformation of functions that translates a function from callable as f(a, b, c) into callable as f(a)(b)(c).",
      "it": "Currying è una tecnica di valutazione delle funzioni con più argomenti, in una sequenza di funzioni con un solo argomento. È anche noto come applicazione parziale di una funzione ai suoi argomenti. Currying è una trasformazione delle funzioni che traduce una funzione da chiamabile come f(a, b, c) in chiamabile come f(a)(b)(c)."
    }
  }
]
